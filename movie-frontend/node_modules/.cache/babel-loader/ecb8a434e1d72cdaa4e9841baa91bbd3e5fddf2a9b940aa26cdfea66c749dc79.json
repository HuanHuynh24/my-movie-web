{"ast":null,"code":"var _jsxFileName = \"D:\\\\movie_website\\\\movie-frontend\\\\src\\\\page\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/home.css\";\nimport axios from \"axios\";\nimport Carousel from \"../component/Carousel \";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n\n  // lấy Api movies\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/movies/\");\n        setMovies(response.data);\n      } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  // end Api movies\n\n  // Chuyển động slide\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const slideRef = useRef(null);\n  const nextRef = useRef(null);\n  const prevRef = useRef(null);\n  const autoplayRef = useRef(null);\n  const autoplayTime = 5000; // milliseconds\n\n  const moveToNextSlide = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % movies.length);\n    resetAutoplay();\n  };\n  const moveToPrevSlide = () => {\n    setCurrentIndex(prevIndex => (prevIndex - 1 + movies.length) % movies.length);\n    resetAutoplay();\n  };\n  const resetAutoplay = () => {\n    clearInterval(autoplayRef.current);\n    autoplayRef.current = setInterval(() => {\n      moveToNextSlide();\n    }, autoplayTime);\n  };\n  useEffect(() => {\n    const next = nextRef.current;\n    const prev = prevRef.current;\n    next.addEventListener(\"click\", moveToNextSlide);\n    prev.addEventListener(\"click\", moveToPrevSlide);\n    autoplayRef.current = setInterval(() => {\n      moveToNextSlide();\n    }, autoplayTime);\n\n    // Cleanup event listeners on component unmount\n    return () => {\n      next.removeEventListener(\"click\", moveToNextSlide);\n      prev.removeEventListener(\"click\", moveToPrevSlide);\n      clearInterval(autoplayRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid gx-0 slide-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"slide\",\n        ref: slideRef,\n        children: movies.slice(0, 6).map((movie, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `item`,\n            style: {\n              backgroundImage: `url(http://localhost:5000${movie.imgBanner})`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: movie.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [movie.description.substring(0, 100), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: movie.videoUrl,\n                  children: \"Xem phim\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-previous\",\n          ref: prevRef,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChevronLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-next\",\n          ref: nextRef,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChevronRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"vQuHCgmXvfFSFwVfkzV6FxCDCXM=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","faChevronLeft","faChevronRight","axios","Carousel","FontAwesomeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","movies","setMovies","fetchMovies","response","get","data","error","console","currentIndex","setCurrentIndex","slideRef","nextRef","prevRef","autoplayRef","autoplayTime","moveToNextSlide","prevIndex","length","resetAutoplay","moveToPrevSlide","clearInterval","current","setInterval","next","prev","addEventListener","removeEventListener","children","className","id","ref","slice","map","movie","index","style","backgroundImage","imgBanner","name","fileName","_jsxFileName","lineNumber","columnNumber","description","substring","href","videoUrl","icon","_c","$RefreshReg$"],"sources":["D:/movie_website/movie-frontend/src/page/home.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../styles/home.css\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Carousel from \"../component/Carousel \";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  // lấy Api movies\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/movies/\");\r\n        setMovies(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching movies:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n  // end Api movies\r\n\r\n  // Chuyển động slide\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const slideRef = useRef(null);\r\n  const nextRef = useRef(null);\r\n  const prevRef = useRef(null);\r\n  const autoplayRef = useRef(null);\r\n  const autoplayTime = 5000; // milliseconds\r\n\r\n  const moveToNextSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % movies.length);\r\n    resetAutoplay();\r\n  };\r\n\r\n  const moveToPrevSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + movies.length) % movies.length);\r\n    resetAutoplay();\r\n  };\r\n\r\n  const resetAutoplay = () => {\r\n    clearInterval(autoplayRef.current);\r\n    autoplayRef.current = setInterval(() => {\r\n      moveToNextSlide();\r\n    }, autoplayTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const next = nextRef.current;\r\n    const prev = prevRef.current;\r\n\r\n    next.addEventListener(\"click\", moveToNextSlide);\r\n    prev.addEventListener(\"click\", moveToPrevSlide);\r\n\r\n    autoplayRef.current = setInterval(() => {\r\n      moveToNextSlide();\r\n    }, autoplayTime);\r\n\r\n    // Cleanup event listeners on component unmount\r\n    return () => {\r\n      next.removeEventListener(\"click\", moveToNextSlide);\r\n      prev.removeEventListener(\"click\", moveToPrevSlide);\r\n      clearInterval(autoplayRef.current);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid gx-0 slide-container\">\r\n        <div id=\"slide\" ref={slideRef}>\r\n          {movies.slice(0,6).map((movie, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className={`item`}\r\n                style={{\r\n                  backgroundImage: `url(http://localhost:5000${movie.imgBanner})`,\r\n                }}\r\n              >\r\n                <div className=\"content\">\r\n                  <h3>{movie.name}</h3>\r\n                  <p>{movie.description.substring(0, 100)}...</p>\r\n                  <button>\r\n                    <a href={movie.videoUrl}>Xem phim</a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button className=\"btn btn-previous\" ref={prevRef}>\r\n          <FontAwesomeIcon icon={faChevronLeft} />\r\n           \r\n          </button>\r\n          <button className=\"btn btn-next\"  ref={nextRef}>\r\n          <FontAwesomeIcon icon={faChevronRight} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Carousel />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}