{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nconst useCarousel = (slideRef, nextRef, prevRef, autoplayTime = 5000, isRun) => {\n  _s();\n  const autoplayRef = useRef();\n  useEffect(() => {\n    const slide = slideRef.current;\n    const next = nextRef.current;\n    const prev = prevRef.current;\n    if (isRun) {\n      const moveToNextSlide = () => {\n        let items = slide.querySelectorAll(\".carousel\");\n        slide.appendChild(items[0]);\n        resetAutoplay();\n      };\n      const moveToPrevSlide = () => {\n        let items = slide.querySelectorAll(\".carousel\");\n        slide.prepend(items[items.length - 1]);\n        resetAutoplay();\n      };\n      const resetAutoplay = () => {\n        clearInterval(autoplayRef.current);\n        autoplayRef.current = setInterval(() => {\n          moveToNextSlide();\n        }, autoplayTime);\n      };\n      next.addEventListener(\"click\", moveToNextSlide);\n      prev.addEventListener(\"click\", moveToPrevSlide);\n      autoplayRef.current = setInterval(() => {\n        moveToNextSlide();\n      }, autoplayTime);\n\n      // Clean up event listeners on component unmount\n      return () => {\n        next.removeEventListener(\"click\", moveToNextSlide);\n        prev.removeEventListener(\"click\", moveToPrevSlide);\n        clearInterval(autoplayRef.current);\n      };\n    }\n  }, [autoplayTime]); // Chỉ kiểm tra autoplayTime\n};\n_s(useCarousel, \"ohRUb7ecTutUUY3U2CzlWNZYWN4=\");\nexport default useCarousel;","map":{"version":3,"names":["useEffect","useRef","useCarousel","slideRef","nextRef","prevRef","autoplayTime","isRun","_s","autoplayRef","slide","current","next","prev","moveToNextSlide","items","querySelectorAll","appendChild","resetAutoplay","moveToPrevSlide","prepend","length","clearInterval","setInterval","addEventListener","removeEventListener"],"sources":["D:/movie-web/movie-frontend/src/carousels/carousel.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\nconst useCarousel = (slideRef, nextRef, prevRef, autoplayTime = 5000, isRun) => {\r\n  const autoplayRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const slide = slideRef.current;\r\n    const next = nextRef.current;\r\n    const prev = prevRef.current;\r\n\r\n    if (isRun) {\r\n      const moveToNextSlide = () => {\r\n        let items = slide.querySelectorAll(\".carousel\");\r\n        slide.appendChild(items[0]);\r\n        resetAutoplay();\r\n      };\r\n  \r\n      const moveToPrevSlide = () => {\r\n        let items = slide.querySelectorAll(\".carousel\");\r\n        slide.prepend(items[items.length - 1]);\r\n        resetAutoplay();\r\n      };\r\n  \r\n      const resetAutoplay = () => {\r\n        clearInterval(autoplayRef.current);\r\n        autoplayRef.current = setInterval(() => {\r\n          moveToNextSlide();\r\n        }, autoplayTime);\r\n      };\r\n  \r\n      next.addEventListener(\"click\", moveToNextSlide);\r\n      prev.addEventListener(\"click\", moveToPrevSlide);\r\n  \r\n      autoplayRef.current = setInterval(() => {\r\n        moveToNextSlide();\r\n      }, autoplayTime);\r\n  \r\n      // Clean up event listeners on component unmount\r\n        return () => {\r\n          next.removeEventListener(\"click\", moveToNextSlide);\r\n          prev.removeEventListener(\"click\", moveToPrevSlide);\r\n          clearInterval(autoplayRef.current);\r\n        };\r\n    }\r\n  }, [autoplayTime]); // Chỉ kiểm tra autoplayTime\r\n};\r\n\r\nexport default useCarousel;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,YAAY,GAAG,IAAI,EAAEC,KAAK,KAAK;EAAAC,EAAA;EAC9E,MAAMC,WAAW,GAAGR,MAAM,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGP,QAAQ,CAACQ,OAAO;IAC9B,MAAMC,IAAI,GAAGR,OAAO,CAACO,OAAO;IAC5B,MAAME,IAAI,GAAGR,OAAO,CAACM,OAAO;IAE5B,IAAIJ,KAAK,EAAE;MACT,MAAMO,eAAe,GAAGA,CAAA,KAAM;QAC5B,IAAIC,KAAK,GAAGL,KAAK,CAACM,gBAAgB,CAAC,WAAW,CAAC;QAC/CN,KAAK,CAACO,WAAW,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3BG,aAAa,CAAC,CAAC;MACjB,CAAC;MAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;QAC5B,IAAIJ,KAAK,GAAGL,KAAK,CAACM,gBAAgB,CAAC,WAAW,CAAC;QAC/CN,KAAK,CAACU,OAAO,CAACL,KAAK,CAACA,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC;QACtCH,aAAa,CAAC,CAAC;MACjB,CAAC;MAED,MAAMA,aAAa,GAAGA,CAAA,KAAM;QAC1BI,aAAa,CAACb,WAAW,CAACE,OAAO,CAAC;QAClCF,WAAW,CAACE,OAAO,GAAGY,WAAW,CAAC,MAAM;UACtCT,eAAe,CAAC,CAAC;QACnB,CAAC,EAAER,YAAY,CAAC;MAClB,CAAC;MAEDM,IAAI,CAACY,gBAAgB,CAAC,OAAO,EAAEV,eAAe,CAAC;MAC/CD,IAAI,CAACW,gBAAgB,CAAC,OAAO,EAAEL,eAAe,CAAC;MAE/CV,WAAW,CAACE,OAAO,GAAGY,WAAW,CAAC,MAAM;QACtCT,eAAe,CAAC,CAAC;MACnB,CAAC,EAAER,YAAY,CAAC;;MAEhB;MACE,OAAO,MAAM;QACXM,IAAI,CAACa,mBAAmB,CAAC,OAAO,EAAEX,eAAe,CAAC;QAClDD,IAAI,CAACY,mBAAmB,CAAC,OAAO,EAAEN,eAAe,CAAC;QAClDG,aAAa,CAACb,WAAW,CAACE,OAAO,CAAC;MACpC,CAAC;IACL;EACF,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC;AAACE,EAAA,CA3CIN,WAAW;AA6CjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}